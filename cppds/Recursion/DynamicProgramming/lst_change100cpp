.. activecode:: lst_change100cpp
   :author: bmiller
   :difficulty: 3
   :basecourse: cppds
   :topic: Recursion/DynamicProgramming
   :from_source: T
   :caption: Recursively Counting Coins with Table Lookup Python
   :language: python
   :optional:

   #Program that stores the solution for all possible amounts of change up to a given integer.

   def dpMakeChange(coinValueList,change,minCoins):
      for cents in range(change+1): #loops finds solution for all sets of change from 0 to change parameter.
          coinCount = cents
          for j in [c for c in coinValueList if c <= cents]:
              if minCoins[cents-j] + 1 < coinCount:
                  coinCount = minCoins[cents-j] + 1 #assigns the number of coins that will be used to make the sum.
          minCoins[cents] = coinCount

      return minCoins[change]


   def main():
      print(dpMakeChange([1, 5, 10, 21, 25], 63, [0]*64))
   main()