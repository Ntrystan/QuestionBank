.. activecode:: lst_change2py
    :author: Brad Miller
    :difficulty: 3.0
    :basecourse: cppds
    :topic: Recursion/DynamicProgramming
    :from_source: F
    :caption: Recursively Counting Coins with Table Lookup Python

    def recDC(coinValueList,change,knownResults):
        minCoins = change
        if change in coinValueList:
            knownResults[change] = 1
            return 1
        elif knownResults[change] > 0:
            return knownResults[change]
        else:
            for i in [c for c in coinValueList if c <= change]:
                numCoins = 1 + recDC(coinValueList, change-i, knownResults)
                if numCoins < minCoins:
                    minCoins = numCoins
                    knownResults[change] = minCoins
            return minCoins


    def main():
        print(recDC([1,5,10,25],63,[0]*64))

    main()