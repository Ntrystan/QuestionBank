.. activecode:: lhs_8_15
    :author: LHS CS Team
    :difficulty: 0.0
    :basecourse: thinkcspy
    :topic: MoreAboutIteration/Exercises
    :from_source: F
    :language: python
    :autograde: unittest

    Write a function ``howManyMonths(start, rate, spending, target)`` where:

    ``start`` - the starting balance in your bank account (float)

    ``rate`` - the monthly interest rate (float) - like 0.001 for 0.1%  

    ``spending`` - the monthly amount that is spent each month (float)

    ``target`` - the target savings that you'd like to achieve

    The function returns how many months it takes to save the ``target``
    savings amount. The function should return a -1 if the balance goes
    below 0 because the spending is too high. The function should also return
    -1 if the target is not reached after 100 months.

    Each month you earn the monthly ``rate`` of interest, but you also spend
    the ``spending`` amount.

    So, ``next_month_balance = start_balance * (1 + rate) - spending``

    ~~~~
    def howManyMonths(start, rate, spending, target):
        # write your code here
    
    # any test cases you'd like to have

    ====
    import sys
    import re
    from unittest.gui import TestCaseGui
    
    class myTests(TestCaseGui):
    
    
        def _golden(self, start, rate, spending, target):
            balance = start
            months = 0
            while (balance >= 0 and balance < target and months < 100):
                balance = balance * (1 + rate) - spending
                months += 1

            if balance >= target:
                return months
            else:
                return -1

        # just opening and closing file does not work, so need a print statement to "empty" the file
        def deleteFile(self, fname):
            # empty out the file so nothing shows
            sys.stdout = open(fname, "w")
            print()
            sys.stdout.close()
    
        def testOne(self):
            print("Auto-testing...")  # can be deleted if you hide all prints() to a file
            
            # strips the test code - when testing code with the test code 
            code = self.getEditorText()
            pos = code.find("class myTests")
            if (pos != -1):
                code = code[:pos]
    
            # hide print()
            fname = "test.out"

            # create output file
            sys.stdout = open(fname, "w")

            tests = [ (1000, .01, 1, 1500), (1000, 0.01, 100, 1500), (1000, 0.01, 10, 1500) ] 
            for t in tests:
                self.assertEqual(howManyMonths(*t), self._golden(*t), "testing")

            sys.stdout.close()
            self.deleteFile(fname)
            
            
    myTests().main()
