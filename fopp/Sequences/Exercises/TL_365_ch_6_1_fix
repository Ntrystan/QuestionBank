.. actex:: TL_365_ch_6_1_fix
   :author: Tyler Luchko
   :difficulty: 1.0
   :basecourse: fopp
   :topic: Sequences/Exercises
   :from_source: F
   :language: python
   :autograde: unittest

   Consider the list below in the activecode. Write the expressions to do the following:

   1. print letter 'C' from this list,
   2. print letters 'C', 'D', 'E' as a list,
   3. print the length of this list,
   4. print the first element of this list,
   5. print the last element of this list, and
   6. create a variable called grade and assign the third element
      ('C') from list letters list to it (print variable grade to make
      sure you did the right indexing).

   Warning: for all printouts use indexing and the name of the
   list (letters).  You cannot do print('C')!
   ~~~~
   letters = ['A', 'B', 'C', 'D', 'E']

   ====

   from unittest.gui import TestCaseGui
   import re
   class myTests(TestCaseGui):
       def testOne(self):
           output = self.getOutput().split('\n')
	   editor = self.getEditorText().split('\n')
           self.assertEqual(output[0], 'C', 'Checking first line')
	   self.assertEqual(output[1], str(['C','D','E']), 'Checking second line')
	   self.assertEqual(output[2], '5', 'Checking third line')
	   self.assertEqual(output[3], 'A', 'Checking fourth line')
	   self.assertEqual(output[4], 'E', 'Checking fifth line')
	   self.assertEqual(grade, "C", "Checking variable 'grade'")
	   self.assertFalse(re.search(r'[ABCDE]', '\n'.join(editor[1:])), 'Checking for hardcoding')
   myTests().main()
