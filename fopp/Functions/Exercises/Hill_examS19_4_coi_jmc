.. activecode:: Hill_examS19_4_coi_jmc
   :author: Jonny Comes
   :difficulty: 0
   :basecourse: fopp
   :topic: Functions/Exercises
   :from_source: F
   :language: python
   :autograde: unittest

   Write a function ``speak(animal, number)`` that takes the name of an animal (either ``cow``, ``dog``, or ``pig``) 
   and a number between 1 and 5 (inclusive) as parameters, and returns their signature utterance (``moo``, ``woof``, or ``oink``) 
   as many times as ``number`` says, separated by spaces. For example, calling ``speak('cow', 3)`` should return the string ``"moo moo moo"``.
   If the function is called with any other animal, or if the number is outside the given range, 
   then the function should print an appropriate error message to the terminal and return ``None``.
   ~~~~
    
   ====

   from unittest.gui import TestCaseGui

   class myTests(TestCaseGui):

        def testOne(self):
            self.assertEqual(speak("cow",3).strip(),"moo moo moo","Checking speak('cow',3)")
            self.assertEqual(speak("pig",2).strip(),"oink oink","Checking speak('pig',2)")
            self.assertEqual(speak("dog",5).strip(),"woof woof woof woof woof","Checking speak('dog',5)")
            self.assertEqual(None,speak("elephant",1),"Your function should return None if a different animal is given.")
            self.assertEqual(None,speak("dog",6),"Your function should return None if the number is not between 1 and 5.")
            self.assertEqual(None,speak("pig",0),"Your function should return None if the number is not between 1 and 5.")


   myTests().main()