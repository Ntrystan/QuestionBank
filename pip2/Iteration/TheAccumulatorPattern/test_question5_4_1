.. mchoice:: test_question5_4_1
   :author: Brad Miller
   :difficulty: 3
   :basecourse: pip2
   :topic: Iteration/TheAccumulatorPattern
   :from_source: None
   :answer_a: It will print out 10 instead of 55
   :answer_b: It will cause a run-time error
   :answer_c: It will print out 0 instead of 55
   :feedback_a: The variable accum will be reset to 0 each time through the loop. Then it will add the current item. Only the last item will count.
   :feedback_b: Assignment statements are perfectly legal inside loops and will not cause an error.
   :feedback_c: Good thought: the variable accum will be reset to 0 each time through the loop. But then it adds the current item.
   :correct: a

   Consider the following code:

   .. code-block:: python

      nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
      for w in nums:
         accum = 0
         accum = accum + w
      print accum

   What happens if you put the initialization of accum inside the for loop as the first
   instruction in the loop?