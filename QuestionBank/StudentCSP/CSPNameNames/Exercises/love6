.. activecode:: love6
       :author: Barbara  Ericson
       :difficulty: 0
       :basecourse: StudentCSP
       :topic: CSPNameNames/Exercises
       :from_source: F
       :nocodelens:
       :autograde: unittest

       The number 6 is a truly great number. Given two int values, a and b, return 
       True if either one is 6 or if their sum or difference is 6. Note: the function 
       abs(num) computes the absolute value of a number.  For example, love6(6,4) 
       returns True, love6(4,5) returns False, love6(1,5) returns True, and love6(1,7) 
       returns True.  
       ~~~~
       def love6(a, b):

       ====
       from unittest.gui import TestCaseGui

       class myTests(TestCaseGui):

           def testOne(self):
               self.assertEqual(love6(6,4), True, 'love6(6,4)')
               self.assertEqual(love6(4, 5), False, 'love6(4, 5)')
               self.assertEqual(love6(1, 5), True, 'love6(1, 5)')
               self.assertEqual(love6(1, 6), True, 'love6(1, 6)')
               self.assertEqual(love6(1, 8), False, 'love6(1, 8)')
               self.assertEqual(love6(1,7), True, 'love6(1,7)')
               self.assertEqual(love6(7,5), False, 'love6(7,5)')
               self.assertEqual(love6(8,2), True, 'love6(8,2)')
               self.assertEqual(love6(6,6), True, 'love6(6,6)')
               self.assertEqual(love6(-4, -10), True, 'love6(-4, -10)')
               self.assertEqual(love6(7,-1), True, 'love6(7,-1)')
               self.assertEqual(love6(-6, 12), True, 'love6(-6, 12)')
               self.assertEqual(love6(7,1), True, 'love6(7,1)')
               self.assertEqual(love6(1, 7), True, 'love6(1, 7)') 
               self.assertEqual(love6(8,3), False, 'love6(8,3)')
               self.assertEqual(love6(0,9), False, 'love6(0,9)')

       myTests().main()