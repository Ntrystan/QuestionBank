.. mchoice:: peerwiseqb_4052730
    :basecourse: peerwiseqb
    
    .. raw:: html
    
       <p><strong>2016_Q22:</strong></p><p>Consider the following function definition:</p><p>&nbsp;</p><p><span style="font-family: courier new,courier,monospace;">int Test(int *values, int length)</span><br /><span style="font-family: courier new,courier,monospace;">{</span><br /><span style="font-family: courier new,courier,monospace;">&nbsp;&nbsp; int i;</span><br /><span style="font-family: courier new,courier,monospace;">&nbsp;&nbsp; int test = values[0];</span><br /><span style="font-family: courier new,courier,monospace;">&nbsp;&nbsp; for (i = 1; i &lt; length; i++) {</span><br /><span style="font-family: courier new,courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (test &lt; values[i]) {</span><br /><span style="font-family: courier new,courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; test = values[i];</span><br /><span style="font-family: courier new,courier,monospace;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><span style="font-family: courier new,courier,monospace;">&nbsp;&nbsp; }</span><br /><span style="font-family: courier new,courier,monospace;">&nbsp;&nbsp; return test;</span><br /><span style="font-family: courier new,courier,monospace;">}</span></p><p>&nbsp;</p><p>If this function is called as follows:</p><p>&nbsp;</p><p><span style="font-family: courier new,courier,monospace;">&nbsp;&nbsp; int nums[10] = {100, 75, 75, 200, 50, 200, 100, 50, 100, 100};</span><br /><span style="font-family: courier new,courier,monospace;">&nbsp;&nbsp; int result;</span></p><p>&nbsp;</p><p><span style="font-family: courier new,courier,monospace;">&nbsp;&nbsp; result = Test(nums, 10);</span></p><p>&nbsp;</p><p><span style="font-family: courier new,courier,monospace;">&nbsp;&nbsp; printf("Result = %d ", result);</span></p><p>&nbsp;</p><p>what output would be generated (and what best describes the purpose of this function?)</p>
    

    - ``Result = 100``    
          
      (i.e. it returns the first value in the array larger than the value to its    
      right)    
      

      - Incorrect
    - ``Result = 50``    
          
      (i.e. it returns the smallest value in the array)    
      

      - Incorrect
    - ``Result = 200``    
          
      (i.e. it returns the largest value in the array)    
      

      + Correct!
    - ``Result = 1050``    
          
      (i.e. it returns the sum of the values in the array)    
      

      - Incorrect
    - ``Result = 75``    
          
      (i.e. it returns the first value in the array smaller than the value to its    
      right)    
      

      - Incorrect
