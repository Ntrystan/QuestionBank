.. activecode:: simple_test_3
    :author: Brad Miller
    :difficulty: 3
    :basecourse: pip2
    :topic: Testing/Testingfunctions
    :from_source: None

    def square(x):
        return x*x

    def update_counts(letters, counts_dict):
        for c in letters:
            if c in counts_dict:
                counts_dict[c] = counts_dict[c] + 1
            else:
                counts_dict[c] = 1

    from unittest.gui import TestCaseGui # because we're in the textbook interface

    class myTests(TestCaseGui):

        def test_return_value(self):
            self.assertEqual(square(3), 9)

        def test_side_effect(self):
            counts_dict = {'a': 3, 'b': 2}
            update_counts("aaab", counts_dict)
            # 3 more occurrences of a, so 6 in all
            self.assertEqual(counts_dict['a'], 6)
            # 1 more occurrence of b, so 3 in all
            self.assertEqual(counts_dict['b'], 3)

    myTests().main()