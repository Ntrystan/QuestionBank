.. activecode:: postfixeval
   :author: bmiller
   :difficulty: 3
   :basecourse: cppds
   :topic: LinearBasic/InfixPrefixandPostfixExpressions
   :from_source: T
   :caption: Postfix Evaluation
   :nocodelens:
   :optional:

   #Solves a postfix math problem.

   from pythonds.basic.stack import Stack

   def postfixEval(postfixExpr):
       operandStack = Stack()
       tokenList = postfixExpr.split()

       for token in tokenList:
           if token in "0123456789":
               operandStack.push(int(token))
           else:
               operand2 = operandStack.pop()
               operand1 = operandStack.pop()
               result = doMath(token,operand1,operand2)
               operandStack.push(result)
       return operandStack.pop()

   def doMath(op, op1, op2):
       #Does math based on what op is passed as.
       if op == "*":
           return op1 * op2
       elif op == "/":
           return op1 / op2
       elif op == "+":
           return op1 + op2
       else:
           return op1 - op2

   def main():
       print(postfixEval('7 8 + 3 2 + /'))
   main()