.. mchoice:: canterburyqb_635045
    :basecourse: canterburyqb
        
    Given the following Java class declaration:    
        
    .. code-block::    
        
        
           public class T2int    
           {    
               private int i;    
        
               public T2int()    
               {    
                   i = 0;    
               }    
        
               public T2int(int i)    
               {    
                   this.i = i;    
               }    
        
               public int get()    
               {    
                   return i;    
               }    
           }    
        
    The following method, called ``rangeSum()``\ , is intended to take three    
    parameters: a ``List`` of ``T2int`` objects, plus the ``low`` and ``high`` end of a    
    range within the list. The method computes the sum of the values in the ``List``    
    that are **within** the "range" (but **not including** the range end values).    
    Choose the best choice to fill in the blank on **Line 7** so that the method    
    will work as intended:    
        
    .. code-block::    
        
        
           public int rangeSum(List<T2int> list, int low, int high)    
           {    
               int num = 0;                                 // Line 1    
               int sum = 0;                                 // Line 2    
        
               for (int idx = 0; idx < list.size(); idx++)  // Line 3    
               {    
                   int ival = list.get(idx).get();          // Line 4    
                   if (__________)                          // Line 5    
                   {    
                       num++;                               // Line 6    
                       sum = __________;                    // Line 7    
                   }    
               }    
               return __________;                           // Line 8    
           }    
    

    - ``sum + ival``    
      

      + Correct!
    - ``sum + num``    
      

      - Since the method computes the sum of all values found, and the local variable    
        `sum` is used to accumulate this total, sum should be updated to `sum + ival`.
    - ``sum + idx``    
      

      - Since the method computes the sum of all values found, and the local variable    
        `sum` is used to accumulate this total, sum should be updated to `sum + ival`.
    - ``sum + list.size()``    
      

      - Since the method computes the sum of all values found, and the local variable    
        `sum` is used to accumulate this total, sum should be updated to `sum + ival`.
    - ``sum + 1``    
      

      - Since the method computes the sum of all values found, and the local variable    
        `sum` is used to accumulate this total, sum should be updated to `sum + ival`.
