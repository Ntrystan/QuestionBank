.. mchoice:: canterburyqb_633579
    :basecourse: canterburyqb
        
    You've got a class that holds two ints and that can be compared with other    
    IntPair objects:    
        
    .. code-block::    
        
        
           class IntPair {    
             private int a;    
             private int b;    
        
             public IntPair(int a, int b) {    
               this.a = a;    
               this.b = b;    
             }    
        
             public int compareTo(IntPair other) {    
               if (a < other.a) {    
                 return -1;    
               } else if (a > other.a) {    
                 return 1;    
               } else {    
                 if (b == other.b) {    
                   return 0;    
                 } else if (b > other.b) {    
                   return -1;    
                 } else {    
                   return 1;    
                 }    
               }    
             }    
           }    
        
    Let's denote new IntPair(5, 7) as [5 7]. You've got a list of IntPairs:    
        
    [5 7], [2 9], [3 2]    
        
    You sort them using IntPair.compareTo. What is their sorted order?    
    

    - [2 9], [3 2], [5 7]    
      

      + Correct!
    - [5 7], [3 2], [2 9]    
      

      - compareTo orders on IntPair.a first, in ascending fashion. Since all elements    
        have unique a values, we simple sort according to the first element.
    - [3 2], [5 7], [2 9]    
      

      - compareTo orders on IntPair.a first, in ascending fashion. Since all elements    
        have unique a values, we simple sort according to the first element.
    - [2 9], [5 7], [3 2]    
      

      - compareTo orders on IntPair.a first, in ascending fashion. Since all elements    
        have unique a values, we simple sort according to the first element.
