.. mchoice:: canterburyqb_633250
    :basecourse: canterburyqb
        
    Removing a node from a heap is    
    

    - O(1)    
      

      - The last node is moved into the empty spot, which may be the root, and it may    
        trickle back down to the bottom level. The performance is based on the number    
        of levels in the tree. As heaps are balanced, the performance is O(log N).
    - O(log N)    
      

      + Correct!
    - O(N)    
      

      - The last node is moved into the empty spot, which may be the root, and it may    
        trickle back down to the bottom level. The performance is based on the number    
        of levels in the tree. As heaps are balanced, the performance is O(log N).
    - O(N log N)    
      

      - The last node is moved into the empty spot, which may be the root, and it may    
        trickle back down to the bottom level. The performance is based on the number    
        of levels in the tree. As heaps are balanced, the performance is O(log N).
    - O(N2)    
      

      - The last node is moved into the empty spot, which may be the root, and it may    
        trickle back down to the bottom level. The performance is based on the number    
        of levels in the tree. As heaps are balanced, the performance is O(log N).
