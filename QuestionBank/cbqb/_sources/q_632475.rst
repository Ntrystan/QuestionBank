.. mchoice:: canterburyqb_632475
    :basecourse: canterburyqb
        
    Identify the bug in the following code (if any):    
        
    ``public boolean search(T item, ListADT list){ // 1``    
        
    .. code-block::    
        
        
              if (list == null) // 2    
                 return false; // 3    
              else if (list.first()==item) // 4    
                 return true; // 5    
              else // 6    
                 return this.search(item, list); // 7    
        
    ``} // 8``    
    

    - There is no base case    
      

      - For a recursive solution to a problem, you need three things:      
        (1) a base case (where the problem can be solved without recursion)      
        (2) a self-similar problem (one that contains similar problem(s) to itself)      
        (3) a way of making the problem smaller so you get closer to the base case    
            
        Here (2) is satisfied -- lists contain smaller lists. (1) is satisfied by    
        lines 2-5 of the method. But the recursive call in line 7 has the same    
        parameter as the method itself (line 1), so the problem never gets smaller.
    - The problem is not self-similar    
      

      - For a recursive solution to a problem, you need three things:      
        (1) a base case (where the problem can be solved without recursion)      
        (2) a self-similar problem (one that contains similar problem(s) to itself)      
        (3) a way of making the problem smaller so you get closer to the base case    
            
        Here (2) is satisfied -- lists contain smaller lists. (1) is satisfied by    
        lines 2-5 of the method. But the recursive call in line 7 has the same    
        parameter as the method itself (line 1), so the problem never gets smaller.
    - The problem does not get smaller    
      

      + Correct!
    - There are no bugs    
      

      - For a recursive solution to a problem, you need three things:      
        (1) a base case (where the problem can be solved without recursion)      
        (2) a self-similar problem (one that contains similar problem(s) to itself)      
        (3) a way of making the problem smaller so you get closer to the base case    
            
        Here (2) is satisfied -- lists contain smaller lists. (1) is satisfied by    
        lines 2-5 of the method. But the recursive call in line 7 has the same    
        parameter as the method itself (line 1), so the problem never gets smaller.
    - None of the above    
      

      - For a recursive solution to a problem, you need three things:      
        (1) a base case (where the problem can be solved without recursion)      
        (2) a self-similar problem (one that contains similar problem(s) to itself)      
        (3) a way of making the problem smaller so you get closer to the base case    
            
        Here (2) is satisfied -- lists contain smaller lists. (1) is satisfied by    
        lines 2-5 of the method. But the recursive call in line 7 has the same    
        parameter as the method itself (line 1), so the problem never gets smaller.
