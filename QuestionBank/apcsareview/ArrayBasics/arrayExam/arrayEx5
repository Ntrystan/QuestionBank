.. mchoice:: arrayEx5
   :author: bmiller
   :difficulty: 3
   :basecourse: apcsareview
   :topic: ArrayBasics/arrayExam
   :from_source: T
   :answer_a: {3,2,2,0}
   :answer_b: {0,1,2,3}
   :answer_c: {3,2,1,0}
   :answer_d: {0,2,4,6}
   :answer_e: {6,4,2,0}
   :correct: a
   :feedback_a: This loops 2 times.  During the first loop it copies x[3] to x[0] and sets x[3] to 2 times the original value of x[0].  In the second loop it copies x[2] to x[1] and sets x[2] to 2 times the original value in x[1].
   :feedback_b: These are the initial values for x, but they are changed since i starts out at 0 and j starts out as 3 and i is less than j.
   :feedback_c: This would be true if the code simply reversed the values in the array, but what happens when x[j] = 2 * temp?
   :feedback_d: This would be true if the code just multiplied all the original values by 2.  Is that what it does?  Why would you need to use temp for that?
   :feedback_e: This would be true if the code multiplied the original values by 2 and reversed the values.  Is that what it does?  The loop only continues while i is less than j, so it doesn't loop through all the values in x.

   After the following code is executed which of the following are the values in ``x``?

   .. code-block:: java

      int[ ] x = {0, 1, 2, 3};
      int temp;
      int i = 0;
      int j = x.length - 1;
      while (i < j)
      {
         temp = x[i];
         x[i] = x[j];
         x[j] = 2 * temp;
         i++;
         j--;
      }