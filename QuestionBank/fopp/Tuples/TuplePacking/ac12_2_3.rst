.. activecode:: ac12_2_3
   :author: bmiller
   :difficulty: 1.1140647245
   :basecourse: fopp
   :chapter: Tuples
   :subchapter: TuplePacking
   :topics: Tuples/TuplePacking
   :from_source: T
   :language: python
   :autograde: unittest
   :chatcodes: 
   :practice: T
   :pct_on_first: 0.3271889401
   :total_students_attempting: 434
   :num_students_correct: 315.0
   :mean_clicks_to_correct: 2.9365079365

   **4.** Provided is a list of tuples. Create another list called ``t_check`` that contains the third element of every tuple.
   ~~~~
   
   lst_tups = [('Articuno', 'Moltres', 'Zaptos'), ('Beedrill', 'Metapod', 'Charizard', 'Venasaur', 'Squirtle'), ('Oddish', 'Poliwag', 'Diglett', 'Bellsprout'), ('Ponyta', "Farfetch'd", "Tauros", 'Dragonite'), ('Hoothoot', 'Chikorita', 'Lanturn', 'Flaaffy', 'Unown', 'Teddiursa', 'Phanpy'), ('Loudred', 'Volbeat', 'Wailord', 'Seviper', 'Sealeo')]
   
   =====
   
   from unittest.gui import TestCaseGui
   
   class myTests(TestCaseGui):
   
      def testOne(self):
         self.assertEqual(t_check, ['Zaptos', 'Charizard', 'Diglett', 'Tauros', 'Lanturn', 'Wailord'], "Testing that pratice value is assigned to correct value.")
   
   myTests().main()