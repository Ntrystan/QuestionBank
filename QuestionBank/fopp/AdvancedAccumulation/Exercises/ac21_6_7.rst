.. actex:: ac21_6_7
   :author: bmiller
   :difficulty: 1.0368139224
   :basecourse: fopp
   :chapter: AdvancedAccumulation
   :subchapter: Exercises
   :topics: AdvancedAccumulation/Exercises
   :from_source: T
   :pct_on_first: 0.5869565217
   :total_students_attempting: 46
   :num_students_correct: 40.0
   :mean_clicks_to_correct: 1.625

   Write a function called positives_Li_Com that receives list of things as the input and returns a list of only the positive things, [3, 5, 7], using the list comprehension.
   ~~~~
   
   things = [3, 5, -4, 7]
   =====
   
   from unittest.gui import TestCaseGui
   
   class myTests(TestCaseGui):
   
       def testOne(self):
           things = [3, 5, -4, 7]
           self.assertEqual(positives_Li_Com(things), [3, 5, 7], "Testing whether positives_Li_Com has been correctly defined.")
           self.assertNotIn('map(', self.getEditorText(), "Testing your code (Don't worry about actual and expected values).")
           self.assertNotIn('filter(', self.getEditorText(), "Testing your code (Don't worry about actual and expected values).")
   
   myTests().main()