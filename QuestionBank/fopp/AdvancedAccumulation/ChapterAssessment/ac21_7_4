.. activecode:: ac21_7_4
   :author: bmiller
   :difficulty: 3
   :basecourse: fopp
   :topic: AdvancedAccumulation/ChapterAssessment
   :from_source: T
   :language: python
   :autograde: unittest
   :chatcodes: 
   :practice: T
   :topics: AdvancedAccumulation/listcomp
   :pct_on_first: 0.7692307692
   :total_students_attempting: 78
   :num_students_correct: 68.0
   :mean_clicks_to_correct: 1.2205882353

   Use list comprehension to create a list called ``lst2`` that doubles each element in the list, ``lst``.
   ~~~~
   
   lst = [["hi", "bye"], "hello", "goodbye", [9, 2], 4]
   
   =====
   
   from unittest.gui import TestCaseGui
   
   class myTests(TestCaseGui):
   
      def testFiveA(self):
         self.assertEqual(lst2, [['hi', 'bye', 'hi', 'bye'], 'hellohello', 'goodbyegoodbye', [9, 2, 9, 2], 8], "Testing that  lst2 is assigned to correct values")
         self.assertNotIn('map(', self.getEditorText(), "Testing your code (Don't worry about actual and expected values).")
         self.assertNotIn('filter(', self.getEditorText(), "Testing your code (Don't worry about actual and expected values).")
         self.assertNotIn('sum(', self.getEditorText(), "Testing your code (Don't worry about actual and expected values).")
         self.assertNotIn('zip(', self.getEditorText(), "Testing your code (Don't worry about actual and expected values).")
   
   myTests().main()