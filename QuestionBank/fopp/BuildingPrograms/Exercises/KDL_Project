.. activecode:: KDL_Project
   :author: Kaelyn Leake
   :difficulty: 0
   :basecourse: fopp
   :topic: BuildingPrograms/Exercises
   :from_source: F
   :autograde: unittest
   :language: python

   The final project is meant to showcase your mastery of Python and be semi-fun or informative. Projects from previous classes have included hangman, a Sudoku solver, a snake game and Yahtzee.   While  you  are encouraged to look at other codes for ideas, inspiration and problem solving, copying any pre-existing code is not  permitted.    All  work  must  be  your  own.   With  that  in  mind,  your  final  coding  must  have  the  following features:

   - Most lines should be fully annotated and explained.
   - At least three for/if/while statements
   - At least one descriptive graph, plot, or image that has been manipulated within your code
   - At least two user inputs
   - At least two user outputs
   - At least one user-created function, also referenced within your code

   ~~~~
   

   ====
   from unittest.gui import TestCaseGui
   import re
   class myTests(TestCaseGui):

       def testOne(self):
           self.assertTrue((self.getEditorText().count('if')+self.getEditorText().count('for')+self.getEditorText().count('while'))>=3,feedback="Checks for the 3 if/while/for")
           self.assertTrue((self.getEditorText().count('print'))>=2,feedback="Checks for the 2 outputs")
           self.assertTrue((self.getEditorText().count('input'))>=2,feedback="Checks for the 2 inputs")
           self.assertTrue((self.getEditorText().count('def'))>=1,feedback="Checks for the 1 function definition")
           self.assertTrue((self.getEditorText().count('.forward')+self.getEditorText().count('.backward')+self.getEditorText().count('.goto')+self.getEditorText().count('.display()')+self.getEditorText().count('.draw'))>=1,feedback="Checks for the 1 graph,drawing,image")
           self.assertTrue((self.getEditorText().count('#'))>(0.3*len(self.getEditorText().split('\n'))),feedback="Checks for a decent number of comments")

   myTests().main()