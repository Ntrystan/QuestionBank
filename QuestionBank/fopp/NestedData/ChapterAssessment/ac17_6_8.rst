.. activecode:: ac17_6_8
   :author: bmiller
   :difficulty: 3.0
   :basecourse: fopp
   :chapter: NestedData
   :subchapter: ChapterAssessment
   :topics: NestedData/ChapterAssessment
   :from_source: T
   :language: python
   :autograde: unittest
   :practice: T

   Iterate through the contents of ``l_of_l`` and assign the third element of sublist to a new list called ``third``.

   ~~~~

   l_of_l = [['purple', 'mauve', 'blue'], ['red', 'maroon', 'blood orange', 'crimson'], ['sea green', 'cornflower', 'lavender', 'indigo'], ['yellow', 'amarillo', 'mac n cheese', 'golden rod']]

   =====

   from unittest.gui import TestCaseGui

   class myTests(TestCaseGui):

      def testOne(self):
         self.assertEqual(third, ['blue', 'blood orange', 'lavender', 'mac n cheese'], "Testing that third has the correct list assigned to it.")

   myTests().main()