.. activecode:: ac17_6_3
   :author: bmiller
   :difficulty: 3
   :basecourse: fopp
   :topic: NestedData/ChapterAssessment
   :from_source: T
   :language: python
   :autograde: unittest
   :practice: T
   :topics: NestedData/ListswithComplexItems
   :pct_on_first: 0.1917808219
   :total_students_attempting: 146
   :num_students_correct: 99.0
   :mean_clicks_to_correct: 4.101010101

   Below, we've provided a list of lists. Use in statements to create variables with Boolean values - see the ActiveCode window for further directions.
   
   ~~~~
   
   L = [[5, 8, 7], ['hello', 'hi', 'hola'], [6.6, 1.54, 3.99], ['small', 'large']]
   
   # Test if 'hola' is in the list L. Save to variable name test1
   
   # Test if [5, 8, 7] is in the list L. Save to variable name test2
   
   # Test if 6.6 is in the third element of list L. Save to variable name test3
   
   =====
   
   from unittest.gui import TestCaseGui
   
   class myTests(TestCaseGui):
   
      def testA(self):
         self.assertEqual(test1, False, "Testing that test1 has the correct value.")
      def testB(self):
         self.assertEqual(test2, True, "Testing that test2 has the correct value.")
      def testC(self):
         self.assertEqual(test3, True, "Testing that test3 has the correct value.")
   
   myTests().main()