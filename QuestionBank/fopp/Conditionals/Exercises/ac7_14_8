.. actex:: ac7_14_8
    :author: bmiller
    :difficulty: 3.0
    :basecourse: fopp
    :chapter: Conditionals
    :subchapter: Exercises
    :topics: Conditionals/Exercises
    :from_source: T
    :pct_on_first: 0.4640718563
    :total_students_attempting: 334
    :num_students_correct: 260.0
    :mean_clicks_to_correct: 2.5846153846

    Given the lengths of three sides of a triange, determine whether the triangle is right angled. If it is, the assign ``True`` to the variable ``is_rightangled``. If it's not, then assign ``False`` to the variable ``is_rightangled``.
    
    Hint: floating point arithmetic is not always exactly accurate,
    so it is not safe to test floating point numbers for equality.
    If a good programmer wants to know whether
    ``x`` is equal or close enough to ``y``, they would probably code it up as
    
    .. sourcecode:: python
    
        if  abs(x - y) < 0.001:      # if x is approximately equal to y
            ...
    
    ~~~~
    a = 5
    b = 6
    c = 8
    
    
    ====
    from unittest.gui import TestCaseGui
    
    class myTests(TestCaseGui):
        def testOne(self):
            self.assertEqual(is_rightangled, False, "Testing whether is_rightangled is set correctly")
    
    myTests().main()