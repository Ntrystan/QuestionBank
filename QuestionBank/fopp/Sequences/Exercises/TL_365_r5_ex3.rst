.. actex:: TL_365_r5_ex3
   :author: Tyler Luchko
   :difficulty: 1.0
   :basecourse: fopp
   :chapter: Sequences
   :subchapter: Exercises
   :topics: Sequences/Exercises
   :from_source: F
   :language: python
   :autograde: unittest
   :pct_on_first: 0.1441441441
   :total_students_attempting: 111
   :num_students_correct: 56.0
   :mean_clicks_to_correct: 2.9464285714

   Given the list in activecode below use list indexing to print the
   type of the 4th element ('lights') and 7th element ('1') of
   ``ls1``. Use one print statement for each element. Did you get what
   you expected? Did you expect '1' to be an integer? Now do the same
   for ls2. You notice that now you get a different result. Compare
   and analyze why.
   
   ~~~~
   ls1 = ['who', 'world', 'run', 'lights', '?', 'girls', '1', 'sea']
   #your code here
   #your code here
   ls2 = ['who', 'world', 'run', 'lights', '?', 'girls', 1, 'sea']
   #your code here
   #your code here
   
   ====
   
   from unittest.gui import TestCaseGui
   import re
   class myTests(TestCaseGui):
       def testOne(self): 
           output = self.getOutput().split('\n')
    editor = self.getEditorText().split('\n')
    self.assertEqual(output[0], str(type(ls1[3])), 'Checking first line')
    self.assertEqual(output[1], str(type(ls1[6])), 'Checking second line')
    self.assertEqual(output[2], str(type(ls2[3])), 'Checking third line')
    self.assertEqual(output[3], str(type(ls2[6])), 'Checking fourth line')
    #self.assertFalse(re.search(r'(int|str)', '\n'.join(editor)), 'Checking for hardcoding')
   myTests().main()