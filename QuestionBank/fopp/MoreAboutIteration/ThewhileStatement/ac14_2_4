.. activecode:: ac14_2_4
    :author: bmiller
    :difficulty: 3.0
    :basecourse: fopp
    :chapter: MoreAboutIteration
    :subchapter: ThewhileStatement
    :topics: MoreAboutIteration/ThewhileStatement
    :from_source: T
    :practice: T
    :pct_on_first: 0.0674157303
    :total_students_attempting: 356
    :num_students_correct: 155.0
    :mean_clicks_to_correct: 8.5935483871

    Write a function called ``stop_at_four`` that iterates through a list of numbers. Using a while loop, append each number to a new list until the number 4 appears. The function should return the new list.
    ~~~~
    
    def stop_at_four():
    
    
    
    =====
    
    from unittest.gui import TestCaseGui
    
    class myTests(TestCaseGui):
    
       def testOne(self):
          self.assertEqual(stop_at_four([0, 9, 4.5, 1, 7, 4, 8, 9, 3]), [0, 9, 4.5, 1, 7], "Testing the function stop_at_four on the input [0, 9, 4.5, 1, 7, 4, 8, 9, 3].")
          self.assertEqual(stop_at_four([4, 1, 2, 8]), [], "Testing the function stop_at_four on the input [4, 1, 2, 8].")
          self.assertEqual(stop_at_four([4]), [], "Testing the function stop_at_four on the input [4].")
          self.assertEqual(stop_at_four([1, 6, 2, 3, 9]), [1, 6, 2, 3, 9], "Testing that stop_at_four([1, 6, 2, 3, 9]) returns ([1, 6, 2, 3, 9])")
    
    myTests().main()