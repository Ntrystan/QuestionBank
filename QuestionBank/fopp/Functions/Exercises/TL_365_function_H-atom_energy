.. actex:: TL_365_function_H-atom_energy
   :author: Tyler Luchko
   :difficulty: 1
   :basecourse: fopp
   :topic: Functions/Exercises
   :from_source: F
   :language: python
   :autograde: unittest

   The `energy levels of the hydrogen atom
   <http://hyperphysics.phy-astr.gsu.edu/hbase/hyde.html>`_
   are given by the equation
   
   .. math::
      E_{n}=-\frac{2 e^{4}m_{e}}{\left(4\epsilon_{0}h\right)^{2}}\left(\frac{1}{n^{2}}\right)\quad n=1,2,3,\dots
   
   where :math:`m_{e}=9.109381\times10^{-31}\text{ kg}` is the electron
   mass, :math:`e=1.602176\times10^{-19}\text{ C}` is the elementary
   charge, :math:`\epsilon_{0}=8.854187817\times10^{-12}\text{ F/m}`
   is the permittivity of free space,
   :math:`h=6.626068\times10^{-34}\text{J}\cdot\text{s}` is Planck's
   constant, and :math:`n` is the quantum number.
   
   Write a function called ``h_atom_ene`` that takes the quantum
   number as a parameter and returns the energy in units of electron
   volts, where
   
   .. math::
      1\text{ eV} = 1.602176\times10^{-19}\text{ J}.
   
   ~~~~ 
   mass = 9.109381e-31
   elem_charge = 1.602176e-19
   perm_free_space = 8.854187817e-12
   planck = 6.626068e-34
   joules_per_eV = 1.602176e-19

   ====
   from unittest.gui import TestCaseGui
   import math
   class myTests(TestCaseGui):
       def testOne(self):
           def _h_atom_ene(level):
	      ene_0 = -2 * elem_charge**4 * mass / (4 * perm_free_space * planck)**2
	      return ene_0 / level**2 /joules_per_eV

	   for level in range(1,10):
	       self.assertAlmostEqual(h_atom_ene(level), _h_atom_ene(level), 7,
	           "Check energy level "+str(level))
   myTests().main()