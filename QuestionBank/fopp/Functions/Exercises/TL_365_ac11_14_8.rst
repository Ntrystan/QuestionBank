.. actex:: TL_365_ac11_14_8
   :author: Tyler Luchko
   :difficulty: 1.2683325896
   :basecourse: fopp
   :chapter: Functions
   :subchapter: Exercises
   :topics: Functions/Exercises
   :from_source: F
   :language: python
   :autograde: unittest
   :pct_on_first: 0.1818181818
   :total_students_attempting: 44
   :num_students_correct: 27.0
   :mean_clicks_to_correct: 5.5555555556

   Write a Python function called ``largest`` that will take a the list of 
   integers between 0 and 1000 and return the maximum value.  (Note:
   there is a builtin function named ``max`` but pretend you cannot
   use it. In fact, don't use the name ``max`` anywhere in you code.)  
   
   ~~~~
   ====
   from unittest.gui import TestCaseGui
   import re
   class myTests(TestCaseGui):
       def testOne(self):
    output = self.getOutput().split('\n')
    editor = self.getEditorText().split('\n')
    float_re = r'[-+]?(\d+(\.\d*)?|\.\d+)([eE][-+]?\d+)?'
    
    lsts = [[509, 455,  71],
            [371, 377, 765, 774, 777, 541, 464, 215, 450, 747],
            [751, 994, 837, 693, 137, 223, 393, 501, 781, 752, 215, 956, 284,
     684,  31, 250, 753, 626, 636, 295, 217, 502, 463,  42, 546]]
    for lst in lsts:
        self.assertEqual(largest(lst), max(lst), 'Checking for the list'+str(lst))
        
    # hardcode check
    self.assertFalse(re.search(r'max', self.getEditorText()), 'Checking for max')
   myTests().main()