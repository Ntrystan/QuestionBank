.. activecode:: ac_exceptions_021
   :author: bmiller
   :difficulty: 3
   :basecourse: fopp
   :topic: Exceptions/ChapterAssessment
   :from_source: T
   :tags: Exceptions/intro-exceptions.rst
   :practice: T
   :topics: Exceptions/intro-exceptions.rst
   :pct_on_first: 0.8484848485
   :total_students_attempting: 99
   :num_students_correct: 99.0
   :mean_clicks_to_correct: 1.2727272727

   Provided is buggy code, insert a try/except so that the code passes.
   ~~~~
   
   lst = [2,4,10,42,12,0,4,7,21,4,83,8,5,6,8,234,5,6,523,42,34,0,234,1,435,465,56,7,3,43,23]
   
   lst_three = []
   
   for num in lst:
       if 3 % num == 0:
           lst_three.append(num)
   
   
   =====
   
   from unittest.gui import TestCaseGui
   
   class myTests(TestCaseGui):
   
      def testOne(self):
         self.assertEqual(lst_three, [1,3], "Testing that lst_three has the correct values.")
   
   myTests().main()