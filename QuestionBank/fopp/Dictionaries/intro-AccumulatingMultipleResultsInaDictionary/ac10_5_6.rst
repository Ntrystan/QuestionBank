.. activecode:: ac10_5_6
   :author: bmiller
   :difficulty: 1.0662650602
   :basecourse: fopp
   :chapter: Dictionaries
   :subchapter: intro-AccumulatingMultipleResultsInaDictionary
   :topics: Dictionaries/intro-AccumulatingMultipleResultsInaDictionary
   :from_source: T
   :language: python
   :autograde: unittest
   :practice: T
   :pct_on_first: 0.28
   :total_students_attempting: 25
   :num_students_correct: 16.0
   :mean_clicks_to_correct: 2.125

   f = open('scarlet.txt', 'r')
   txt = f.read()
   letter_counts = {}
   for c in txt:
      if c not in letter_counts:
         letter_counts[c] = 0
   
      letter_counts[c] = letter_counts[c] + 1
   
   # Write a loop that prints the letters and their counts
   =====
   
   from unittest.gui import TestCaseGui
   
   class myTests(TestCaseGui):
   
      def testOne(self):
         self.assertIn("w:4745", self.getOutput().replace(' ',''), "Testing that correct number of w's is output.")
         self.assertIn("h:12892", self.getOutput().replace(' ',''), "Testing that correct number of h's is output.")
         self.assertIn("G:235", self.getOutput().replace(' ',''), "Testing that correct number of G's is output.")
         self.assertEqual(len(self.getOutput().split('\n')), 90, "Testing that correct number of lines are output.")
   
   myTests().main()