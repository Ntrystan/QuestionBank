.. actex:: TL_365_ex6_11_1
   :author: Tyler Luchko
   :difficulty: 1.1252388194
   :basecourse: fopp
   :chapter: Iteration
   :subchapter: Exercises
   :topics: Iteration/Exercises
   :from_source: F
   :language: python
   :autograde: unittest
   :pct_on_first: 0.172972973
   :total_students_attempting: 185
   :num_students_correct: 103.0
   :mean_clicks_to_correct: 3.1262135922

   In Robert McCloskey's book *Make Way for Ducklings*, the names of
   the ducklings are Jack, Kack, Lack, Mack, Nack, Ouack, Pack, and
   Quack.  This loop tries to output these names in order.
   
   Of course, that's not quite right because Ouack and Quack are misspelled.
   Can you fix it?
   ~~~~
   
   prefixes = "JKLMNOPQ"
   suffix = "ack"
   
   for p in prefixes:
       print(p + suffix)
   
   ====
   from unittest.gui import TestCaseGui
   import re
   class myTests(TestCaseGui):
       def testOne(self):
    # check the answer
    self.assertTrue(re.search('Jack', self.getOutput()), 'Checking answer.')
    self.assertTrue(re.search('Kack', self.getOutput()), 'Checking answer.')
    self.assertTrue(re.search('Lack', self.getOutput()), 'Checking answer.')
    self.assertTrue(re.search('Mack', self.getOutput()), 'Checking answer.')
    self.assertTrue(re.search('Nack', self.getOutput()), 'Checking answer.')
    self.assertTrue(re.search('Ouack', self.getOutput()), 'Checking answer.')
    self.assertTrue(re.search('Pack', self.getOutput()), 'Checking answer.')
    self.assertTrue(re.search('Quack', self.getOutput()), 'Checking answer.')
    
    # hardcode check
    prefixes = ['J','K','L','M','N','Ou','P','Qu']
    self.assertFalse(re.search(r'('+'|'.join([p+suffix for p in prefixes])+r')', self.getEditorText()), 'Checking for hardcoding')
   myTests().main()