.. actex:: TL_365_ex_3_4
   :author: Tyler Luchko
   :difficulty: 1.1493380931
   :basecourse: fopp
   :chapter: Iteration
   :subchapter: Exercises
   :topics: Iteration/Exercises
   :from_source: F
   :language: python
   :autograde: unittest
   :pct_on_first: 0.1306818182
   :total_students_attempting: 176
   :num_students_correct: 99.0
   :mean_clicks_to_correct: 3.5353535354

   Assume you have a list of numbers ``12, 10, 32, 3, 66, 17, 42, 99, 20``
   
   a. Write a loop that prints each of the numbers on a new line.
   b. Write a loop that prints each number and its square on a new line.
   ~~~~
   
   ====
   from unittest.gui import TestCaseGui
   import re
   class myTests(TestCaseGui):
       def testOne(self):
           _seq = [12, 10, 32, 3, 66, 17, 42, 99, 20]
    _seq.extend(["{:d} +{:d}".format(number, number**2) for number in _seq])
    _seq = [str(s) for s in _seq]
   
    output = self.getOutput().split('\n')
    for expected, line in zip(_seq,output):
        self.assertTrue(re.search(expected, line), 'Checking line')
    outer_loops = re.findall(r'^(for .* in.*: *)$', self.getEditorText(), re.M)
    inner_loops = re.findall(r'^( +for .* in.*: *)$', self.getEditorText(), re.M)
    self.assertTrue(len(outer_loops)==2 and len(inner_loops)>=0, 'Checking for-statements')
   myTests().main()