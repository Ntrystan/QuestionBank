.. activecode:: ac15_5_6
   :author: bmiller
   :difficulty: 1.2026035175
   :basecourse: fopp
   :chapter: AdvancedFunctions
   :subchapter: ChapterAssessment
   :topics: AdvancedFunctions/ChapterAssessment
   :from_source: T
   :language: python
   :autograde: unittest
   :practice: T
   :pct_on_first: 0.095505618
   :total_students_attempting: 178
   :num_students_correct: 116.0
   :mean_clicks_to_correct: 4.4396551724

   We have provided the function ``checkingIfIn`` such that if the first input parameter is in the third, dictionary, input parameter, then the function returns that value, and otherwise, it returns ``False``. Follow the instructions in the active code window for specific variable assignmemts.
   ~~~~
   
   def checkingIfIn(a, direction = True, d = {'apple': 2, 'pear': 1, 'fruit': 19, 'orange': 5, 'banana': 3, 'grapes': 2, 'watermelon': 7}):
       if direction == True:
           if a in d:
               return d[a]
           else:
               return False
       else:
           if a not in d:
               return True
           else:
               return d[a]
   
   # Call the function so that it returns False and assign that function call to the variable c_false
   
   # Call the fucntion so that it returns True and assign it to the variable c_true
   
   # Call the function so that the value of fruit is assigned to the variable fruit_ans
   
   # Call the function using the first and third parameter so that the value 8 is assigned to the variable param_check
   
   =====
   
   from unittest.gui import TestCaseGui
   
   class myTests(TestCaseGui):
   
      def testOne(self):
         self.assertEqual(c_false, False, "Testing that c_false has the correct value")
      def testTwo(self):
         self.assertEqual(c_true, True, "Testing that c_true has the correct value")
      def testThree(self):
         self.assertEqual(fruit_ans, 19, "Testing that fruit_ans has the correct value")
      def testFour(self):
         self.assertEqual(param_check, 8, "Testing that param_check has the correct value")
   
   
   myTests().main()