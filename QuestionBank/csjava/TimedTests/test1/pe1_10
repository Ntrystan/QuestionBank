.. mchoice:: pe1_10
   :author: bmiller
   :difficulty: 3.0
   :basecourse: csjava
   :chapter: TimedTests
   :subchapter: test1
   :topics: TimedTests/test1
   :from_source: T
   :answer_a: I
   :answer_b: II
   :answer_c: III
   :answer_d: IV
   :answer_e: V
   :correct: a
   :feedback_a: This will add each current time card hours and minutes to the total.
   :feedback_b: This won't total the hours and minutes and there is no advance method that takes no arguments.
   :feedback_c: There is no advance method that takes no arguments and it doesn't return a value to add to a total.
   :feedback_d: The fields hours and minutes are private and can't be accessed directly in another class.
   :feedback_e: This will add the hour and minutes from the current time record to itself.

   Given the following incomplete class declaration:

   .. code-block:: java

      public class TimeRecord
      {
         private int hours;
         private int minutes; // 0<=minutes<60

         public TimeRecord(int h, int m)
         {
            hours = h;
            minutes = m;
         }

         // postcondition: returns the number of hours
         public int getHours()
            { /* implementation not shown */ }

         // postcondition: returns the number
         // of minutes; 0 <= minutes < 60
         public int getMinutes()
         { /* implementation not shown */ }

         // precondition: h >= 0; m >= 0
         // postcondition: adds h hours and
         // m minutes to this TimeRecord
         public void advance(int h, int m)
         {
            hours = hours + h;
            minutes = minutes + m;
            /* missing code */
         }

         // ... other methods not shown
      }

      // Consider the following declaration that appears in a client program:

      TimeRecord[] timeCards = new TimeRecord[100];


     // Assume that timeCards has been initialized with TimeRecord
     // objects. Consider the following code segment that is intended to compute
     // the total of all the times stored in timeCards.

      TimeRecord total = new TimeRecord(0,0);
      for (int k = 0; k < timeCards.length; k++)
      {
         /* missing expression */
      }

      Which of the following can be used to replace /* missing expression */ so that the code segment will work as intended?

      I.
         total.advance(timeCards[k].getHours(), timeCards[k].getMinutes());

      II.
         timeCards[k].advance();

      III.
         total += timeCards[k].advance();

      IV.
         total.advance(timeCards[k].hours, timeCards[k].minutes);

      V.
         timeCards[k].advance(timeCards[k].getHours(), timeCards[k].getMinutes());