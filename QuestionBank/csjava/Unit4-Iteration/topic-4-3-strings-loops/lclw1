.. activecode:: lclw1
   :author: bmiller
   :difficulty: 3
   :basecourse: csjava
   :topic: Unit4-Iteration/topic-4-3-strings-loops
   :from_source: T
   :language: java
   :autograde: unittest

   Change the code to add code for a counter variable to count the number of 1's replaced in the message and print it out. Change the message to have more mistakes with 1's to test it.
   ~~~~
   public class FindAndReplace
   {
      public static void main(String[] args)
      {
        String message = "Have a 1ong and happy 1ife";
        int index = 0;

        // while more 1's in the message
        while (message.indexOf("1") >= 0)
        {
           // Find the next index for 1
           index = message.indexOf("1");
           System.out.println("Found a 1 at index: " + index);
           // Replace the 1 with a l at index by concatenating substring up to index and then the rest of the string.
           String firstpart = message.substring(0,index);
           String lastpart = message.substring(index+1);
           message = firstpart + "l" + lastpart;
           System.out.println("Replaced 1 with l at index " + index);
           System.out.println("The message is currently " + message + " but we aren't done looping yet!");
        }
        System.out.println("Cleaned text: " + message);
      }
   }
   ====
   // Test for Lesson 4.3.1 - While Loop FindAndReplace lclw1
    import static org.junit.Assert.*;
    import org.junit.*;;
    import java.io.*;

    public class RunestoneTests extends CodeTestHelper
    {
        public RunestoneTests() {
            super("FindAndReplace");
        }

        @Test
        public void testMain() throws IOException
        {
            String output = getMethodOutput("main").trim();
            String expect = "Found a 1 at index: 7\n" +
                "Replaced 1 with l at index 7\n" +
                "The message is currently Have a long and happy 1ife but we aren't done looping yet!\n" +
                "Found a 1 at index: 22\n" +
                "Replaced 1 with l at index 22\n" +
                "The message is currently Have a long and happy life but we aren't done looping yet!\n" +
                "Cleaned text: Have a long and happy life\n";

            boolean pass = !output.equals(expect.trim());

            boolean passed = getResults(expect, output, "Output should be different", pass);
            assertTrue(passed);
         }
        }