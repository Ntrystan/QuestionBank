.. actex:: ex_6_6
   :author: bmiller
   :difficulty: 3
   :basecourse: thinkcspy
   :topic: Selection/Exercises
   :from_source: T
   :practice: T
   :autograde: unittest
   :nocodelens: 
   :pct_on_first: 0.5849802372
   :total_students_attempting: 2530
   :num_students_correct: 2307.0
   :mean_clicks_to_correct: 2.5461638492

   Write a function ``findHypot``.  The function will be given the length of two sides of a right-angled triangle and it should return
   the length of the hypotenuse.  (Hint:  ``x ** 0.5`` will return the square root, or use ``sqrt`` from the math module)
   ~~~~
   
   def findHypot(a,b):
       # your code here
   
   ====
   
   from unittest.gui import TestCaseGui
   
   class myTests(TestCaseGui):
       def testOne(self):
           self.assertEqual(findHypot(12.0,5.0),13.0,"Tested findHypot on inputs of 12.0 and 5.0")
           self.assertEqual(findHypot(14.0,48.0),50.0,"Tested findHypot on inputs of 14.0 and 48.0")
           self.assertEqual(findHypot(21.0,72.0),75.0,"Tested findHypot on inputs of 21.0 and 72.0")
           self.assertAlmostEqual(findHypot(1,1.73205),1.999999,2,"Tested findHypot on inputs of 1 and 1.73205")
   
   myTests().main()