.. activecode:: lhs_9_18
    :author: LHS CS Team
    :difficulty: 0
    :basecourse: thinkcspy
    :topic: Strings/Exercises
    :from_source: F
    :language: python
    :autograde: unittest

    Write a function ``removeDouble(s)`` which takes the string ``s`` and 
    returns a string where all consecutive double letters are just repeated once.

    ``removeDouble('thiis iss a test')`` returns ``this is a test``

    ``removeDouble('thiis isss a test')`` returns ``this iss a test``

    ``removeDouble('thiis issss a test')`` returns ``this iss a test``

    ~~~~
    def removeDouble(s):
        # write your code here
    
    # any test cases you'd like to have
    removeDouble('thiis iss a test')   # this is a test
    removeDouble('thiis isss a test')  # this iss a test
    removeDouble('thiis issss a test') # this iss a test

    ====
    import sys
    import re
    from unittest.gui import TestCaseGui
    
    class myTests(TestCaseGui):
    
        def _removeDouble(self, s):
            out = ""
            checkDup = False
            prevCh = ""
            for ch in s:
                if checkDup:
                    if ch == prevCh:
                        checkDup = False
                    else:
                        out = out + ch
                        prevCh = ch
                else:
                    out = out + ch
                    prevCh = ch
                    checkDup = True

            return out

        # just opening and closing file does not work, so need a print statement to "empty" the file
        def deleteFile(self, fname):
            # empty out the file so nothing shows
            sys.stdout = open(fname, "w")
            print()
            sys.stdout.close()
    
        def testOne(self):
            print("Auto-testing...")  # can be deleted if you hide all prints() to a file
            
            # strips the test code - when testing code with the test code 
            code = self.getEditorText()
            pos = code.find("class myTests")
            if (pos != -1):
                code = code[:pos]
    
            # hide print()
            fname = "test.out"
            # create output file
            sys.stdout = open(fname, "w")

            tests = [ 'thiis iss a test', 
                      'thiis isss a test', 
                      'thiis issss a test',
                      'thiiiiiis isssss a test' ]
            for t in tests:
                self.assertEqual(removeDouble(t), self._removeDouble(t), t)

            sys.stdout.close()
            self.deleteFile(fname)
            
            
    myTests().main()