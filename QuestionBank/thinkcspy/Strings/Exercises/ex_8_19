.. actex:: ex_8_19
   :author: bmiller
   :difficulty: 3
   :basecourse: thinkcspy
   :topic: Strings/Exercises
   :from_source: T
   :practice: T
   :autograde: unittest
   :pct_on_first: 0.3349917081
   :total_students_attempting: 1206
   :num_students_correct: 1019.0
   :mean_clicks_to_correct: 6.5112855741

   Write a function called  ``remove_dups`` that takes a string and creates a new string by only adding those characters that are not already present.  In other words,
   there will never be a duplicate letter added to the new string.
   ~~~~
   def remove_dups(astring):
       # your code here
   
   
   print(remove_dups("mississippi"))   #should print misp
   
   ====
   from unittest.gui import TestCaseGui
   
   class myTests(TestCaseGui):
   
     def testOne(self):
         self.assertEqual(remove_dups("pooh"),"poh","Tested remove_dups on string 'pooh'")
         self.assertEqual(remove_dups("mississippi"),"misp","Tested remove_dups on string 'mississippi'")
         self.assertEqual(remove_dups("potato"),"pota","Tested remove_dups on string 'potato'")
         self.assertEqual(remove_dups("bookkeeper"),"bokepr","Tested remove_dups on string 'bookkeeper'")
         self.assertEqual(remove_dups("oo"),"o","Tested remove_dups on string 'oo'")
   
   myTests().main()