.. activecode:: lhs_10_7a
    :author: LHS CS Team
    :difficulty: 0
    :basecourse: thinkcspy
    :topic: Lists/Exercises
    :from_source: F
    :language: python
    :autograde: unittest
    :pct_on_first: 0.1417004049
    :total_students_attempting: 247
    :num_students_correct: 247.0
    :mean_clicks_to_correct: 6.1133603239

    Write a function ``add_vectors(u, v)`` that takes two lists of numbers of the same length, and returns a new list containing the sums of the corresponding elements of each.
    
    So for example ``[0, 1, 2, 3] + [10, 11, 12, 13]`` is ``[10, 12, 14, 16]``
    
    **NOTE:** The function most **NOT** modify the input parameters ``u`` and ``v``.
    
    The vectors ``u`` and ``v`` can be of any length (i.e. length of the list) and will always be of matching size.
    ~~~~
    
    def add_vectors(u, v):
        # your code here!
    
    =====
    
    from unittest.gui import TestCaseGui
    
    class myTests(TestCaseGui):
        def testOne(self):
            SelfTest = False
            if (SelfTest):
                self.assertEqual(0,1,"Auto-testing if OFF - you must check the program yourself for now")
                return
            print('Auto-testing...')
    
            self.assertEqual(add_vectors([1, 1], [1, 1]), [2, 2])
            self.assertEqual(add_vectors([1, 2], [1, 4]), [2, 6])
            self.assertEqual(add_vectors([1, 2, 1], [1, 4, 3]), [2, 6, 4])
                
    myTests().main()