.. activecode:: sks_prac_lst2
    :author: Shishir Shah
    :difficulty: 0
    :basecourse: thinkcspy
    :topic: Lists/Exercises
    :from_source: F
    :language: python
    :autograde: unittest
    :pct_on_first: 0.0588235294
    :total_students_attempting: 17
    :num_students_correct: 7.0
    :mean_clicks_to_correct: 4.7142857143

    Write a function ``countWords(lst, length)`` that returns the count of
    how many words in a list have a length greater than or equal to ``length``.
    To receive full credit, you must use a **list comprehension**.
    
    ~~~~
    # My Name:
    
    def countWords(lst, length):
        # write your code here
    
    # main program to call the function with any test cases you like
    
    ====
    
    import re
    from unittest.gui import TestCaseGui
    
    class myTests(TestCaseGui):
        def _countWords(self, lst, length):
            sum = 0
            for e in [num for num in lst if len(num) >= length]:
                sum += 1
            return sum
    
        def testOne(self):
            print('Auto-testing...')
            lst = [ 'a', 'bb', 'ccc', 'dddd', 'eeeee', 'ffffff', 'ggggggg']
            test = [ 0, 5, 8 ]
            for i in test:
                self.assertEqual(countWords(lst, i), self._countWords(lst, i), "Testing length "+str(i))
            editText = self.getEditorText()
            Found = len(re.findall("for .* in .*[^\n].*if", editText)) >= 1
            if Found:
                self.assertEqual(Found, True, "list comprehension used")
            else:
                self.assertEqual(Found, True, "list comprehension not found")                
    myTests().main()