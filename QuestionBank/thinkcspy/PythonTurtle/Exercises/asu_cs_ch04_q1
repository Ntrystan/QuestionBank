.. activecode:: asu_cs_ch04_q1
    :author: Erdogan Dogdu
    :difficulty: 0
    :basecourse: thinkcspy
    :topic: PythonTurtle/Exercises
    :from_source: F
    :language: python
    :autograde: unittest

    Write a program that given a number x (e.g. 5), prints the following:

    ::

      1
      1 2
      1 2 3
      1 2 3 4
      1 2 3 4 5

    ~~~~
    # x determines the size of triangle
    x = 5

    # write your code here
    
    ====
    from unittest.gui import TestCaseGui

    class myTests(TestCaseGui):

        # counts how many lines have 'keyword' in word position 'where'
        def count_code(self, code, keyword, where):
            cnt = 0
            for line in code.splitlines():
                word = line.split()
                if where < len(word):
                    # parse function keyword
                    if '(' in word[where]:
                        word = word[where].split('(')
                        if word[0] == keyword:
                            cnt = cnt + 1
                    else:
                        if word[where] == keyword:
                            cnt = cnt + 1
            return(cnt)
    
        def testMany(self):
            outText = self.getOutput()
            editText = self.getEditorText()
            
            pos = editText.index('x = ')
            x = int(editText[pos + 4: pos + 5])
            out = ''
            for i in range(1,x+1):
               for j in range(1,i+1):
                  out += str(j) + ' '
               out = out + '\n'
                
            # self.assertEqual(editText.count('for'), 2, "You need to use just two 'for' loops!")
            self.assertEqual(2, self.count_code(editText, 'for', 0), "You need to use just two 'for' loops!")
            self.assertEqual(2, editText.count('range'), "You need to use just two range functions!")
            self.assertIn(out, outText, "Your output is not right for x=" + str(x))
        
    myTests().main()