.. mchoice:: unbounded_recursion_2
   :author: bmiller
   :difficulty: 3
   :basecourse: thinkcpp
   :topic: Chapter4/InfiniteRecursion
   :from_source: T
   :answer_a: The function will print "Not Negative!"
   :answer_b: The function will print "Not Negative!" more than once.  Then it will print "Negative!" and will stop executing.
   :answer_c: The function will print "Negative!"
   :answer_d: The function will never stop executing, there will be infinite recursion.
   :correct: c
   :feedback_a: The function will never print "Not Negative!" since we start with a negative number!
   :feedback_b: The function will never print "Not Negative!" since we start with a negative number!
   :feedback_c: We start with a negative number, so the function will reach the base case.
   :feedback_d: We start with a negative number, so the function will reach the base case.

   Take a look at the code below.  What will happen if you were to run it on
   your machine?

   ::

       #include <iostream>
       using namespace std;

       void isNegative(int n) {
         if (n >= 0) {
           cout << "Not Negative!";
           nLines(n - 1);
         }
         cout << "Negative!";
       }

       int main() {
         isNegative(-10);
       }