.. activecode:: call_by_reference_AC_1
  :author: bmiller
  :difficulty: 3.0
  :basecourse: thinkcpp
  :topic: Chapter8/call_by_reference
  :from_source: T
  :language: cpp

  Take a look at the active code below. ``reflect`` passes the parameter ``p``
  by reference. Notice that the output of this code matches what we expect it to be.
  ~~~~
  #include <iostream>
  using namespace std;

  struct Point {
      double x, y;
  };

  void reflect (Point& p) {
      double temp = p.x;
      p.x = p.y;
      p.y = temp;
  }

  void printPoint (Point p) {
      cout << "(" << p.x << ", " << p.y << ")" << endl;
  }

  int main() {
      Point blank = { 3.0, 4.0 };
      printPoint (blank);
      reflect (blank);
      printPoint (blank);
  }
