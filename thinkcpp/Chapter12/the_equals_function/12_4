.. activecode:: 12_4
   :author: bmiller
   :difficulty: 3.0
   :basecourse: thinkcpp
   :topic: Chapter12/the_equals_function
   :from_source: T
   :language: cpp

   Run the active code below to see how the ``equals()`` function works.
   ~~~~
   #include <iostream>
   #include <string>
   #include <vector>
   using namespace std;

   struct Card {
       int suit, rank;

       Card ();
       Card (int s, int r);
       void print () const;
       bool equals (const Card& c2) const;
   };

   int main() {
       Card card1 (1,11);
       Card card2 (1,11);
       Card card3 (3,11);
       card1.equals(card2);
       card1.equals(card3);
   }

   ====

   Card::Card () {
     suit = 0;  rank = 0;
   }

   Card::Card (int s, int r) {
     suit = s;  rank = r;
   }

   bool Card::equals (const Card& c2) const {
     bool boolean = (rank == c2.rank && suit == c2.suit);
     if (boolean == true) {
       cout << "Yup, that's the same card." << endl;
     }
     else {
       cout << "Nope, those cards are different." << endl;
     }
     return boolean;
   }

   void Card::print () const {
     vector<string> suits (4);
     suits[0] = "Clubs";
     suits[1] = "Diamonds";
     suits[2] = "Hearts";
     suits[3] = "Spades";

     vector<string> ranks (14);
     ranks[1] = "Ace";
     ranks[2] = "2";
     ranks[3] = "3";
     ranks[4] = "4";
     ranks[5] = "5";
     ranks[6] = "6";
     ranks[7] = "7";
     ranks[8] = "8";
     ranks[9] = "9";
     ranks[10] = "10";
     ranks[11] = "Jack";
     ranks[12] = "Queen";
     ranks[13] = "King";

      cout << ranks[rank] << " of " << suits[suit] << endl;
   }
