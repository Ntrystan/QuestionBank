.. mchoice:: question_sort_9
    :author: bmiller
    :difficulty: 3
    :basecourse: pythoned
    :topic: SortSearch/ElOrdenamientoRapido
    :from_source: None
    :multiple_answers:
    :answer_a: Ordenamiento de Shell
    :answer_b: Ordenamiento rápido
    :answer_c: Ordenamiento por mezcla
    :answer_d: Ordenamiento por inserción
    :correct: c
    :feedback_a: El ordenamiento de Shell sort es aproximadamente ``n^1.5``
    :feedback_b: El ordenamiento rápido puede ser O(n log n), pero si los puntos pivote no son bien escogidos y la lista está cuidadosamente arreglada, puede ser O(n^2).
    :feedback_c: El ordenamiento por mezcla es el único con garantía de ser O(n log n) aún en el peor caso. El costo es que el ordenamiento por mezcla usa más memoria.
    :feedback_d: El ordenamiento por inserción es ``O(n^2)``

    ¿Cuál de los siguientes algoritmos de ordenamiento tienen garatía de ser O(n log n) aún en el peor caso?