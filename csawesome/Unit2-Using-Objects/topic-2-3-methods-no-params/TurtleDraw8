.. activecode:: TurtleDraw8
    :author: bmiller
    :difficulty: 3.0
    :basecourse: csawesome
    :topic: Unit2-Using-Objects/topic-2-3-methods-no-params
    :from_source: T
    :language: java
    :autograde: unittest
    :datafile: turtleClasses.jar

    Can you make yertle draw the digital number 8, as 2 squares on top of each other?
    ~~~~
    import java.util.*;
    import java.awt.*;

    public class TurtleDraw8
    {
      public static void main(String[] args)
      {
          World world = new World(300,300);
          Turtle yertle = new Turtle(world);
          // Make yertle draw an 8 with 2 squares
          yertle.forward();


          world.show(true);
      }
    }
    ====
    import static org.junit.Assert.*;
    import org.junit.*;;
    import java.io.*;

    public class RunestoneTests extends CodeTestHelper
    {
        public RunestoneTests() {
            super("TurtleDraw8");
        }

        @Test
        public void test1()
        {
            String orig = "import java.util.*;\nimport java.awt.*;\n\npublic class TurtleDraw8\n{\n  public static void main(String[] args)\n  {\n      World world = new World(300,300);\n      Turtle yertle = new Turtle(world);\n      // Make yertle draw an 8 with 2 squares\n      yertle.forward();\n\n\n      world.show(true);\n  }\n}\n";
            boolean passed = codeChanged(orig);
            assertTrue(passed);
        }

        @Test
        public void test2() {
            String code = getCode();
            int numForward = countOccurences(code, "forward()");

            boolean passed = numForward >= 7;

            passed = getResults("7 or more", ""+numForward, "Calls to forward()", passed);
            assertTrue(passed);
        }

        @Test
        public void test3() {
            String code = getCode();
            int numTurn = countOccurences(code, ".turn");

            boolean passed = numTurn >= 5;

            passed = getResults("5 or more", ""+numTurn, "Calls to turnRight() or turnLeft()", passed);
            assertTrue(passed);
        }
    }
