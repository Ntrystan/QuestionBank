.. activecode:: rotate
   :author: bmiller
   :difficulty: 3
   :basecourse: csawesome
   :topic: Unit6-Arrays/topic-6-4-array-algorithms
   :from_source: T
   :language: java
   :autograde: unittest

   The code below rotates array elements to the left. Note that you need to use an indexed loop for this because you need to change the array and access two elements at different indices. Try it in the |visualizer| with the CodeLens button. Can you change it to rotate the elements to the right instead? Hint: use a backwards loop.
   ~~~~
   public class Rotate
   {
      public static void main(String[] args)
      {
        int[ ] values = {6, 2, 1, 7, 12, 5};
        int first = values[0];
        for (int i = 0; i < values.length; i++)
        {
           // if it's not the last element, copy the next one over
          if (i < values.length - 1)
          {
              values[i] = values[i+1];
          }
          else {
             // last element gets first
             values[i] = first;
            }
        }
        // print them out to see the results
        for (int val : values)
        {
           System.out.print(val + " ");
        }
    }
   }
   ====
   // Test for Lesson 6.4.2 - Rotate
    import static org.junit.Assert.*;
    import org.junit.*;;
    import java.io.*;

    public class RunestoneTests extends CodeTestHelper
    {
        public RunestoneTests() {
            super("Rotate");
        }

        @Test
        public void test1()
        {
            String output = getMethodOutput("main");
            String expect = "5 6 2 1 7 12";

            boolean passed = output.contains(expect);

            passed = getResults(expect, output, "Rotate numbers to the right", passed);
            assertTrue(passed);
        }

        @Test
        public void test3()
        {
          boolean passed = checkCodeContains("copying values[i-1] into values[i]","values[i] = values[i-1]");
          assertTrue(passed);
        }
       }