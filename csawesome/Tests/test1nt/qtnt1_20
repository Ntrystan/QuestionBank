.. mchoice:: qtnt1_20
   :author: bmiller
   :difficulty: 3
   :basecourse: csawesome
   :topic: Tests/test1nt
   :from_source: T
   :answer_a: I
   :answer_b: II
   :answer_c: III
   :answer_d: IV
   :answer_e: V
   :correct: e
   :feedback_a: The method alter shifts the values in the columns starting at column c + 1 and shifting back to entry to the left of c + 1. This matrix is what would result if c was three and we were shifitng the number there to the two spots before it.
   :feedback_b: Although some numbers are overwriten in the matrix, the matrix will still be 3x4 matrix.
   :feedback_c: Although some numbers are overwriten in the matrix, the matrix will still be 3x4 matrix.
   :feedback_d: This is what would happen if we were shifting rows instead of columns in the alter method.
   :feedback_e: Method alter shifts the values in the columns, starting at column c + 1, one column to the left. It also overwrites column c. Here are the replacements made for the method call alter(1): matrix[0][1] = matrix[0][2], matrix[0][2] = matrix[0][3], matrix[1][1] = matrix[1][2], matrix[1][2] = matrix[1][3], matrix[2][1] = matrix[2][2], matrix[2][2] = matrix[2][3]


   What would the contents of ``matrix``, a 2-D array of integers, be after a call to ``alter(1)``? The method alter is defined below.


   .. code-block:: java

      private int[][] matrix;

      /* matrix looks like this initially
      1 3 5 7
      2 4 6 8
      3 5 7 9
      */

      public void alter(int c)
      {
        for (int i = 0; i < matrix.length; i++)
        {
          for (int j = c + 1; j < matrix[0].length; j++)
          {
            matrix[i][j - 1] = matrix[i][j];
          }
        }
      }


    I. 1 7 7 7
       2 8 8 8
       3 9 9 9

    II. 1 5 7
        2 6 8
        3 7 9

    III. 1 3 5 7
         3 5 7 9

    IV. 1 3 5 7
        3 5 7 9
        3 5 7 9

    V. 1 5 7 7
       2 6 8 8
       3 7 9 9