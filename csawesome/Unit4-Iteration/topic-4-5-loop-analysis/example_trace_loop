.. activecode:: example_trace_loop
   :author: bmiller
   :difficulty: 3
   :basecourse: csawesome
   :topic: Unit4-Iteration/topic-4-5-loop-analysis
   :from_source: T
   :language: java
   :autograde: unittest

   Can you trace through this code? Add in output statements ``System.out.println("var1: " + var1 + " var2: " + var2);`` before the loop and inside the loop at the end to keep track of the variables and run. Click on the Code Lens button to visualize the code step by step.
   ~~~~
   public class Trace
   {
       public static void main(String[] args)
       {
           int var1 = 3;
           int var2 = 2;

           while ((var2 != 0) && ((var1 / var2) >= 0))
           {
               var1 = var1 + 1;
               var2 = var2 - 1;
           }
       }
   }
   ====
   import static org.junit.Assert.*;
    import org.junit.*;
    import java.io.*;

    public class RunestoneTests extends CodeTestHelper
    {
      @Test
      public void testMain() throws IOException
      {
        String output = getMethodOutput("main");
        String expect = "var1: 3 var2: 2\nvar1: 4 var2: 1\nvar1: 5 var2: 0\n";
        boolean passed = getResults(expect, output, "Expected output from main", true);
        assertTrue(passed);
      }
    }