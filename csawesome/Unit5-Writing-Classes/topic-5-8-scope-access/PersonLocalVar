.. activecode:: PersonLocalVar
  :author: bmiller
  :difficulty: 3
  :basecourse: csawesome
  :topic: Unit5-Writing-Classes/topic-5-8-scope-access
  :from_source: T
  :language: java
  :autograde: unittest

  In this example, the local variable is used instead of the instance variable of the same name. What will the code print out? Try it with the CodeLens button.
  ~~~~
  public class Person
  {
     private String name;
     private String email;

     public Person(String initName, String initEmail)
     {
        name = initName;
        email = initEmail;
     }

     public String toString()
     {
       String name = "unknown";
       // The local variable name here will be used,
       //  not the instance variable name.
       return  name + ": " + email;
     }

     // main method for testing
     public static void main(String[] args)
     {
        // call the constructor to create a new person
        Person p1 = new Person("Sana", "sana@gmail.com");
        System.out.println(p1);
     }
  }
  ====
  import static org.junit.Assert.*;
    import org.junit.*;;
    import java.io.*;

    public class RunestoneTests extends CodeTestHelper
    {
        @Test
        public void testMain() throws IOException
        {
            String output = getMethodOutput("main");
            String expect = "unknown: sana@gmail.com";
            boolean passed = getResults(expect, output, "Expected output from main", true);
            assertTrue(passed);
        }
    }