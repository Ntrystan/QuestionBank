.. activecode:: td_pattern
    :author: bmiller
    :difficulty: 3
    :basecourse: TeacherCSP
    :topic: CSPTurtleDecisions/decTurtle
    :from_source: T
    :tour_1: "Structural Tour"; 1-4: td1a-line1-4; 6-8: td1a-line6-8; 10-15: td1a-line10-15; 17: td1a-line17; 18: td1a-line18; 19: td1a-line19; 20: td1a-line20; 21: td1a-line21; 22: td1a-line22; 23: td1a-line23; 24: td1a-line24; 25: td1a-line25;
    :nocodelens:

    from turtle import *      # use the turtle library
    from sys import *         # use the system library
    setExecutionLimit(50000)  # let this take up to 50 seconds
    space = Screen()          # create a turtle screen (space)

    width = 400               # set the desired width
    space.setup(width,width)  # set the space width and height
    maxX = width / 2          # set the max x value to half the width

    jaz = Turtle()            # create a turtle named jaz
    jaz.shape('turtle')       # set the shape for jaz to turtle
    jaz.penup()               # pick up the pen (don't draw)
    jaz.goto(-1 * maxX,100)   # go to the left side of the space
    jaz.pendown()             # put the pen down to draw with
    jaz.left(60)              # turn the turtle left 60 degrees

    for x in range(10):       # repeat the body 10 times
        jaz.forward(100)           # go forward 100
        jaz.right(120)             # turn right 120 degrees
        jaz.forward(100)           # go forward 100
        jaz.left(120)              # turn left 120 degrees
        if (jaz.xcor() >= maxX):   # if at right edge of space
            jaz.penup()                # pick up the pen
            jaz.goto(-1 * maxX,jaz.ycor() - 100)  # move left & down
            jaz.pendown()              # put the pen down