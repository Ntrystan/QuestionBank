.. mchoice:: e24_3_7
   :author: bmiller
   :difficulty: 3.0
   :basecourse: TeacherCSP
   :topic: CSPPracticeQuestions/exam24_3
   :from_source: T
   :answer_a: I,III
   :answer_b: II, III
   :answer_c: I, IV
   :answer_d: I, II, III, IV
   :correct: c
   :feedback_a: Incorrect. Option III will not give them the maximum pay, and won't give them any bonus.
   :feedback_b: Incorrect. Both of these options are incorrect.
   :feedback_c: Correct. Both of these options correctly calculate each employee's pay.
   :feedback_d: Incorrect. Options II and III both incorrectly calculate the employee's pay.

    At a company, n number of employees are given the same bonus of $5,000 on top of their salary.  However, each person can only get a maximum of $100,000 a year, so if adding the bonus causes the employee’s total pay to surpass $100,000, the employee will receive the maximum pay of $100,000.  Each employee’s original annual salary is stored in a list entitled employeeList, indexed from 1 to n.

    ::


      PROCEDURE addBonuses(employeeList)
      {
        i ← n
        REPEAT n TIMES
        {
           <MISSING CODE>
           i ← i + 1
        }
        RETURN employeeList
      }

   Which of the following code segments can be placed in the <MISSING CODE> area to make the program work as expected?

   (The min(a,b) and max(a,b) functions return the lesser and greater values of the inputs, respectively.)

   Option I.

        ::

           employeeList[i] ← min (employeeList [i] + 5000, 100000)

   Option II.

        ::

           employeeList [i] ← max (employeeList [i] + 5000, 100000)

   Option III.

        ::

           employeeList[i] ← employeeList [i] + 5000
           IF (employeeList [i] > 100000)
           {
              employeeList [i] ← employeeList [i] - 5000
           }

   Option IV.

        ::

           employeeList[i] ← employeeList [i] + 5000
           IF (employeeList [i] > 100000)
           {
              employeeList [i] ← 100000
           }


